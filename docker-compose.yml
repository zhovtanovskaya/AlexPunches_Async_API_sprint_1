version: '3'
services:
  admin_postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - pg_data_admin:/var/lib/postgresql/data/
    expose:
      - "5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_ADMIN}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_ADMIN}
      POSTGRES_USER: ${POSTGRES_USER_ADMIN}

#  elastic:
#    image: elasticsearch:7.17.5
#    restart: unless-stopped
#    environment:
#      - discovery.type=single-node
#    volumes:
#      - elasticsearch_value:/usr/share/elasticsearch/data
#    expose:
#      - "9200"
#    depends_on:
#      - admin_postgres

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    expose:
      - "6379"

  admin_panel:
    build: admin_panel
    restart: unless-stopped
    volumes:
      - service_static_value:/opt/app/static/
      - service_media_value:/opt/app/media/
      - /tmp/logs/admin_panel/:/var/log/admin_panel/
    expose:
      - "8000"
    env_file:
      - ./.env

  fastapi:
    build: fastapi
    volumes:
      - /tmp/logs/async_api/:/var/log/async_api/
    depends_on:
#      - elastic
      - redis
    expose:
      - "8000"
    env_file:
      - ./.env

    entrypoint: ["./wait-for-it.sh", "-s", "-t", "0", "elastic:9200", "--"]
    command: ["gunicorn", "-b", "0.0.0.0:8000", "--workers", "4", "-k", "uvicorn.workers.UvicornWorker", "src.main:app"]

  nginx:
    image: nginx:1.23
    restart: unless-stopped
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/configs:/etc/nginx/conf.d:ro
      - service_static_value:/var/html/static/
      - service_media_value:/var/html/media/
      - service_assets_value:/var/html/assets/
      - /tmp/logs/nginx/:/var/log/nginx/
    depends_on:
      - fastapi
      - admin_panel
      - auth_flask
#      - activity_api
    ports:
      - "8000:80"

  etl:
    build: etl_services
    volumes:
      - ./etl_services:/opt/app:ro
#    depends_on:
#      - elastic
    entrypoint: ["./wait-for-it.sh", "-s", "-t", "0", "elastic:9200", "--"]
    command: ["python3", "/opt/app/postgres_to_es/load_indexes.py"]
    env_file:
      - ./.env

  auth_postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    volumes:
      - pg_data_auth:/var/lib/postgresql/data/
    expose:
      - "5432"
    environment:
      POSTGRES_DB: ${POSTGRES_DB_AUTH}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD_AUTH}
      POSTGRES_USER: ${POSTGRES_USER_AUTH}

  auth_flask:
    build: auth
    volumes:
      - /tmp/logs/auth_flask/:/var/log/auth_flask/
    depends_on:
      - auth_postgres
      - redis
    expose:
      - "5000"
    env_file:
      - ./.env
    entrypoint: >
      sh -c "python /opt/app/src/manage.py db upgrade head
      && gunicorn -b 0.0.0.0:5000 --workers 4 src.pywsgi:app"

  jaeger:
    image: jaegertracing/all-in-one:1.39.0
    depends_on:
      - auth_flask
    expose:
      - "16686"
      - "6831"
    ports:
      - "16686:16686"
      - "6831:6831/udp"

#  activity_api:
#    build: activity_api
#    volumes:
#      - /tmp/logs/activity_api/:/var/log/activity_api/
#    expose:
#      - "8000"
#    env_file:
#      - ./.env
#    entrypoint: ["./wait-for-it.sh", "-s", "-t", "600", "${EVENT_STORE_HOST}:${EVENT_STORE_PORT}", "--"]
#    command: ["gunicorn", "-b", "0.0.0.0:8000", "--workers", "4", "-k", "uvicorn.workers.UvicornWorker", "src.main:app"]

#  together_api:
#    build: together_api
#    volumes:
#      - /tmp/logs/together_api/:/var/log/together_api/
#      - ./deploy/.mongodb/root.crt:/home/$USER/.mongodb/
#    expose:
#      - "8000"
#    env_file:
#      - ./.env
#    entrypoint: ["./wait-for-it.sh", "-s", "-t", "600", "${EVENT_STORE_HOST}:${EVENT_STORE_PORT}", "--"]
#    command: ["gunicorn", "-b", "0.0.0.0:8000", "--workers", "4", "-k", "uvicorn.workers.UvicornWorker", "src.main:app"]

  together_frontend:
    build: together_frontend
    volumes:
      - /tmp/logs/together_frontend/:/var/log/together_frontend/
      - service_assets_value:/opt/app/assets/
    expose:
      - "8000"
    env_file:
      - ./.env

  ws_together:
    build: ws_together
    volumes:
      - /tmp/logs/ws_together/:/var/log/ws_together/
    expose:
      - "8000"
    env_file:
      - ./.env

  worker_notifications:
    build: worker_notifications
    volumes:
      - /tmp/logs/worker_notifications/:/var/log/worker_notifications
    expose:
      - "8000"
    env_file:
      - ./.env

  etl_notifications:
    build: etl_notifications
    env_file:
      - ./.env


volumes:
  service_static_value:
  service_media_value:
  service_assets_value:
#  elasticsearch_value:
  pg_data_admin:
  pg_data_auth: